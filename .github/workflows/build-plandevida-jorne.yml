name: Build firmware

on:
  push:
    branches:
    - master
    - transport_layer_status
  pull_request:
    paths:
    - 'lib/python/**'
    - 'bin/qmk'
    - 'requirements.txt'
    - '.github/workflows/build-plandevida-jorne.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    container: plandevida/qmk_basedevel

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up keyboard
      run: qmk config user.keyboard=crkbd/rev1/common
    - name: Set up keymap
      run: qmk config user.keymap=plandevida-jorne
    - name: Compile keymap left side
      run: qmk clean && qmk compile
    - name: Rename the firmware file
      run: mv crkbd_rev1_common_plandevida-jorne.hex crkbd_rev1_common_plandevida-jorne-left.hex
    - name: Prepare compilation for right side 1/2
      run: sed -i "s@#define MASTER_LEFT@//#define MASTER_LEFT@gm" keyboards/crkbd/keymaps/plandevida-jorne/config.h
    - name: Prepare compilation for right side 2/2
      run: sed -i "s@//#define MASTER_RIGHT@#define MASTER_RIGHT@gm" keyboards/crkbd/keymaps/plandevida-jorne/config.h
    - name: Compile keymap right side
      run: qmk clean && qmk compile
    - name: Rename the firmware file
      run: mv crkbd_rev1_common_plandevida-jorne.hex crkbd_rev1_common_plandevida-jorne-right.hex
    - name: Archive jorne
      uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: crkbd_rev1_common_plandevida-jorne-*.hex
        if-no-files-found: error
    - name: Ziping files
      run: zip firmware.zip crkbd_rev1_common_plandevida-jorne-*.hex
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}-${{ github.run_id }}
        release_name: Release ${{ github.ref }}-${{ github.run_id }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./firmware.zip
        asset_name: firmware.zip
        asset_content_type: application/zip
